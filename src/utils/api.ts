import axios from "axios";
import { useInitialSettings } from "../hooks/useInitialSettings";

const isProduction = process.env.NODE_ENV === "production";

export const api = axios.create({
  baseURL: "https://",
});

api.interceptors.request.use(
  async (config) => {
    // const { data } = useInitialSettings.getState();
    // console.log("ğŸš€  data na apiiiiii", data);
    // Loga a URL completa da rota chamada
    console.log(`RequisiÃ§Ã£o para a rota: ${config.baseURL}${config.url}`);

    // Verifica se 'method' estÃ¡ definido antes de acessÃ¡-lo
    if (config.method) {
      console.log(`MÃ©todo HTTP: ${config.method.toUpperCase()}`);
    }

    // Loga os cabeÃ§alhos da requisiÃ§Ã£o
    console.log("CabeÃ§alhos:", config.headers);

    // Loga os parÃ¢metros de consulta (query params) se existirem
    if (config.params) {
      console.log(
        "ParÃ¢metros de consulta:",
        JSON.stringify(config.params, null, 2)
      );
    }

    // Loga o corpo da requisiÃ§Ã£o (para mÃ©todos como POST, PUT, etc.)
    if (config.data) {
      console.log("Dados enviados:", JSON.stringify(config.data, null, 2));
    }

    // Retorna a configuraÃ§Ã£o para prosseguir com a requisiÃ§Ã£o
    return config;
  },
  (error) => {
    // Lida com erros de requisiÃ§Ã£o
    return Promise.reject(error);
  }
);
